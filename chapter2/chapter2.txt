----------- basic plot ---------------
import matplotlib.pyplot

plt.plot(x, y)                -> x,y are arrays and same length
                       it could also supply multiple pairs of arrays to plot several sets of data on the same axes
plt.show()                    -> call fn to print plot
plt.figure()                -> manually create a new figure

fig, ax = plt.subplots()   ->  create a new figure and explicitly create a new set of axes in this figure together

----- Changing the plotting style ---------
plt.plot([], '123') -> The format string has three optional parts, each consisting of one or more characters.
The first part controls the marker style, which is the symbol that is printed at each data point;
the second controls the style of the line that connects the data points;
the third controls the color of the plot;

ax.axis([])        # set axes
ax.set_xticks([])  # set xticks
ax.set_yticks([])  # set yticks
ax.grid()          # draw grid

ax.set_title("")    # set title
ax.set_xlabel("")   # set title label x 
ax.set_ylabel("")   # set title label y

ax.legend(("data 1", "data 2", "data 3"))  # add a legend follow order of plot(1, 2, 3)

--------- Surface and contour plots ------------
To plot three-dimensional data, it needs to be arranged into two-dimensional arrays for
the x, y, and z components, where both the x and y components must be of the same shape
as the z component

fig = plt.figure()
ax = fig.add_subplot(projection="3d")  # declare 3d plot

ax.plot_surface(x, y, z)               # surface
plt.contour(x, y, z)                   # coutour
